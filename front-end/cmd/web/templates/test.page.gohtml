{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-primary" href="javascript:void(0);"> Test broker </a>
                <a id="authBtn" class="btn btn-danger" href="javascript:void(0);"> Test Auth </a>
                <a id="loggerBtn" class="btn btn-warning" href="javascript:void(0);"> Test Logger </a>
                <a id="mailBtn" class="btn btn-success" href="javascript:void(0);"> Test Mail </a>
                
                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
    let brokerBtn = document.getElementById("brokerBtn");
    let authBtn = document.getElementById("authBtn");
    let loggerBtn = document.getElementById("loggerBtn");
    let output = document.getElementById("output");
    let sent = document.getElementById("payload");
    let received = document.getElementById("received");
    let mailBtn = document.getElementById("mailBtn");

    brokerBtn.addEventListener("click", function(){

        const body = {
            method: 'POST',
        };

        fetch("http:\/\/localhost:8082", body)
         .then((response) => response.json() )
         .then((data) => {
            sent.innerHTML = "Sent empty data !";
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if(data.error) {
                console.log(data.message);
            } else {
                output.innerHTML = `<br><strong>Received from broker service:</strong> ${data.message}`;
            }

         })
         .catch((error) => {
            output.innerHTML = "<br>Error:"+ error;
         })

    });

    authBtn.addEventListener("click", function(){

        const requestPayload = {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret"

                }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(requestPayload),
            headers: headers
        }

        fetch("http:\/\/localhost:8082/handleRequest", body)
         .then((response) => response.json() )
         .then((data) => {
            sent.innerHTML = JSON.stringify(requestPayload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if(data.error) {
                output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
            } else {
                output.innerHTML += `<br><strong>Received from broker service:</strong> ${data.message}`;
            }

         })
         .catch((error) => {
            output.innerHTML = "<br>Error:"+ error;
         })

    });
    
    loggerBtn.addEventListener("click", function(){

        const requestPayload = {
                action: "log",
                log: {
                    name: "event",
                    data: "some event data",
                }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(requestPayload),
            headers: headers
        }

        fetch("http:\/\/localhost:8082/handleRequest", body)
         .then((response) => response.json() )
         .then((data) => {
            sent.innerHTML = JSON.stringify(requestPayload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if(data.error) {
                output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
            } else {
                output.innerHTML += `<br><strong>Received from broker service:</strong> ${data.message}`;
            }

         })
         .catch((error) => {
            output.innerHTML = "<br>Error:"+ error;
         })

    });

    mailBtn.addEventListener("click", function(){

        const requestPayload = {
                action: "mail",
                mail: {
                    from: "me@example.com",
                    to: "you@example.com",
                    subject: "Test mail",
                    message: "Hello this is an email",
                }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(requestPayload),
            headers: headers
        }

        fetch("http:\/\/localhost:8082/handleRequest", body)
         .then((response) => response.json() )
         .then((data) => {
            sent.innerHTML = JSON.stringify(requestPayload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            if(data.error) {
                output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
            } else {
                output.innerHTML += `<br><strong>Received from broker service:</strong> ${data.message}`;
            }

         })
         .catch((error) => {
            output.innerHTML = "<br>Error:"+ error;
         })

    });
        
    </script>
{{end}}
